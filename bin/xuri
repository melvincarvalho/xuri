#!/bin/bash

# Function to execute an npm package using npx
# $1 is the package name, the rest of the arguments are passed to the package
function xuri_npm {
  if ! command -v npx &> /dev/null
  then
    echo "npx could not be found"
    exit
  fi
  npx "$1" "${@:2}" || echo "Error executing npm package $1"
}

# Function to execute a file
# $1 is the file path, the rest of the arguments are passed to the file
function xuri_file {
  if [ ! -f "$1" ]; then
    echo "File $1 not found"
    exit
  fi
  "$1" "${@:2}" || echo "Error executing file $1"
}

# Function to execute an npub command
# $1 is the npub command, the rest of the arguments are passed to the command
function xuri_npub {
  xnpub "$1" "${@:2}"
}

# Function to execute an ssh command
# $1 is the ssh command, the rest of the arguments are passed to the command
function xuri_ssh {
  if ! command -v ssh &> /dev/null
  then
    echo "ssh could not be found"
    exit
  fi
  ssh "$1" "${@:2}" || echo "Error executing ssh command $1"
}

# Function to execute an HTTP request
# $1 is the URL for the HTTP request
function xuri_http {
  http "$1"
}

# Function to execute a Docker command
# $1 is the Docker command
function xuri_docker {
  if ! command -v docker &> /dev/null
  then
    echo "docker could not be found"
    exit
  fi
  docker "$1" || echo "Error executing Docker command $1"
}

# Main script
# Depending on the first argument, calls the corresponding function
# If the first argument doesn't match any of the known commands, prints a usage message and exits
case "$1" in
  npm)
    shift
    xuri_npm "$@"
  ;;
  file)
    shift
    xuri_file "$@"
  ;;
  npub)
    shift
    xuri_npub "$@"
  ;;
  ssh)
    shift
    xuri_ssh "$@"
  ;;
  http)
    shift
    xuri_http "$@"
  ;;
  docker)
    shift
    xuri_docker "$@"
  ;;
  *)
    echo "Usage: $0 {npm|file|npub|ssh|http|docker} [args]"
    exit 1
esac
